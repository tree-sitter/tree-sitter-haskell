a = a ++ a

a = a
  ++ a

-- This parses slightly wrong: the space between the do statement expression and the operator are included in the do
-- expression node.
-- It is a tradeoff for the benefit of being able to close layouts before varsyms based only on the circumstance that
-- varsym is a parse error at that position (because the semicolon that's generated by the varsym's indent ends the
-- expression).
-- Parse errors are used for all of these layout ends, and it's how GHC implements it.
a = do
  a
  ++ a

a = (a ++
  )

a = (a ++
  a)
