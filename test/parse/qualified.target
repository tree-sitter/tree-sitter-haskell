(haskell [0, 0] - [3, 0]
  imports: (imports [0, 0] - [2, 0]
    import: (import [0, 0] - [0, 16]
      module: (module [0, 7] - [0, 12]
        (module_id [0, 7] - [0, 8])
        (module_id [0, 9] - [0, 10])
        (module_id [0, 11] - [0, 12]))
      names: (import_list [0, 13] - [0, 16]
        name: (import_name [0, 14] - [0, 15]
          type: (name [0, 14] - [0, 15])))))
  declarations: (declarations [2, 0] - [3, 0]
    (bind [2, 0] - [2, 9]
      name: (variable [2, 0] - [2, 1])
      match: (match [2, 2] - [2, 9]
        expression: (qualified [2, 4] - [2, 9]
          module: (module [2, 4] - [2, 8]
            (module_id [2, 4] - [2, 5])
            (module_id [2, 6] - [2, 7]))
          id: (variable [2, 8] - [2, 9]))))))
