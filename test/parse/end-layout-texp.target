(haskell [0, 0] - [10, 0]
  (comment [0, 0] - [1, 45])
  declarations: (declarations [2, 0] - [10, 0]
    (bind [2, 0] - [9, 3]
      name: (variable [2, 0] - [2, 1])
      match: (match [2, 2] - [9, 3]
        expression: (tuple [3, 2] - [9, 3]
          element: (case [4, 4] - [5, 12]
            (variable [4, 9] - [4, 10])
            alternatives: (alternatives [5, 6] - [5, 12]
              alternative: (alternative [5, 6] - [5, 12]
                pattern: (variable [5, 6] - [5, 7])
                match: (match [5, 8] - [5, 12]
                  expression: (variable [5, 11] - [5, 12])))))
          (comment [6, 8] - [6, 12])
          element: (literal [8, 4] - [8, 5]
            (integer [8, 4] - [8, 5])))))))
