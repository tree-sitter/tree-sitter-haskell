(haskell [0, 0] - [15, 0]
  declarations: (declarations [0, 0] - [15, 0]
    (bind [0, 0] - [3, 15]
      name: (variable [0, 0] - [0, 1])
      match: (match [0, 2] - [1, 3]
        expression: (do [0, 4] - [1, 3]
          statement: (exp [1, 2] - [1, 3]
            (variable [1, 2] - [1, 3]))))
      (comment [2, 4] - [2, 8])
      binds: (local_binds [3, 9] - [3, 15]
        decl: (bind [3, 10] - [3, 15]
          name: (variable [3, 10] - [3, 11])
          match: (match [3, 12] - [3, 15]
            expression: (variable [3, 14] - [3, 15])))))
    (bind [5, 0] - [8, 9]
      name: (variable [5, 0] - [5, 1])
      match: (match [5, 2] - [6, 3]
        expression: (do [5, 4] - [6, 3]
          statement: (exp [6, 2] - [6, 3]
            (variable [6, 2] - [6, 3]))))
      (comment [7, 8] - [7, 12])
      binds: (local_binds [8, 4] - [8, 9]
        decl: (bind [8, 4] - [8, 9]
          name: (variable [8, 4] - [8, 5])
          match: (match [8, 6] - [8, 9]
            expression: (variable [8, 8] - [8, 9])))))
    (bind [10, 0] - [14, 9]
      name: (variable [10, 0] - [10, 1])
      match: (match [10, 2] - [11, 3]
        expression: (do [10, 4] - [11, 3]
          statement: (exp [11, 2] - [11, 3]
            (variable [11, 2] - [11, 3]))))
      (comment [13, 4] - [13, 8])
      binds: (local_binds [14, 4] - [14, 9]
        decl: (bind [14, 4] - [14, 9]
          name: (variable [14, 4] - [14, 5])
          match: (match [14, 6] - [14, 9]
            expression: (variable [14, 8] - [14, 9])))))))
